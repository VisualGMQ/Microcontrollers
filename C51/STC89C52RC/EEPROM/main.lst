                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _EEPROM_Read
                                     13 	.globl _EEPROM_Write
                                     14 	.globl _IIC_Read
                                     15 	.globl _IIC_Write
                                     16 	.globl _IIC_WaitAck
                                     17 	.globl _IIC_SendNack
                                     18 	.globl _IIC_SendAck
                                     19 	.globl _IIC_Stop
                                     20 	.globl _IIC_Start
                                     21 	.globl _IIC_Delay
                                     22 	.globl _Delay
                                     23 	.globl _InitTimer
                                     24 	.globl _CY
                                     25 	.globl _AC
                                     26 	.globl _F0
                                     27 	.globl _RS1
                                     28 	.globl _RS0
                                     29 	.globl _OV
                                     30 	.globl _F1
                                     31 	.globl _P
                                     32 	.globl _PS
                                     33 	.globl _PT1
                                     34 	.globl _PX1
                                     35 	.globl _PT0
                                     36 	.globl _PX0
                                     37 	.globl _RD
                                     38 	.globl _WR
                                     39 	.globl _T1
                                     40 	.globl _T0
                                     41 	.globl _INT1
                                     42 	.globl _INT0
                                     43 	.globl _TXD
                                     44 	.globl _RXD
                                     45 	.globl _P3_7
                                     46 	.globl _P3_6
                                     47 	.globl _P3_5
                                     48 	.globl _P3_4
                                     49 	.globl _P3_3
                                     50 	.globl _P3_2
                                     51 	.globl _P3_1
                                     52 	.globl _P3_0
                                     53 	.globl _EA
                                     54 	.globl _ES
                                     55 	.globl _ET1
                                     56 	.globl _EX1
                                     57 	.globl _ET0
                                     58 	.globl _EX0
                                     59 	.globl _P2_7
                                     60 	.globl _P2_6
                                     61 	.globl _P2_5
                                     62 	.globl _P2_4
                                     63 	.globl _P2_3
                                     64 	.globl _P2_2
                                     65 	.globl _P2_1
                                     66 	.globl _P2_0
                                     67 	.globl _SM0
                                     68 	.globl _SM1
                                     69 	.globl _SM2
                                     70 	.globl _REN
                                     71 	.globl _TB8
                                     72 	.globl _RB8
                                     73 	.globl _TI
                                     74 	.globl _RI
                                     75 	.globl _P1_7
                                     76 	.globl _P1_6
                                     77 	.globl _P1_5
                                     78 	.globl _P1_4
                                     79 	.globl _P1_3
                                     80 	.globl _P1_2
                                     81 	.globl _P1_1
                                     82 	.globl _P1_0
                                     83 	.globl _TF1
                                     84 	.globl _TR1
                                     85 	.globl _TF0
                                     86 	.globl _TR0
                                     87 	.globl _IE1
                                     88 	.globl _IT1
                                     89 	.globl _IE0
                                     90 	.globl _IT0
                                     91 	.globl _P0_7
                                     92 	.globl _P0_6
                                     93 	.globl _P0_5
                                     94 	.globl _P0_4
                                     95 	.globl _P0_3
                                     96 	.globl _P0_2
                                     97 	.globl _P0_1
                                     98 	.globl _P0_0
                                     99 	.globl _B
                                    100 	.globl _ACC
                                    101 	.globl _PSW
                                    102 	.globl _IP
                                    103 	.globl _P3
                                    104 	.globl _IE
                                    105 	.globl _P2
                                    106 	.globl _SBUF
                                    107 	.globl _SCON
                                    108 	.globl _P1
                                    109 	.globl _TH1
                                    110 	.globl _TH0
                                    111 	.globl _TL1
                                    112 	.globl _TL0
                                    113 	.globl _TMOD
                                    114 	.globl _TCON
                                    115 	.globl _PCON
                                    116 	.globl _DPH
                                    117 	.globl _DPL
                                    118 	.globl _SP
                                    119 	.globl _P0
                                    120 ;--------------------------------------------------------
                                    121 ; special function registers
                                    122 ;--------------------------------------------------------
                                    123 	.area RSEG    (ABS,DATA)
      000000                        124 	.org 0x0000
                           000080   125 _P0	=	0x0080
                           000081   126 _SP	=	0x0081
                           000082   127 _DPL	=	0x0082
                           000083   128 _DPH	=	0x0083
                           000087   129 _PCON	=	0x0087
                           000088   130 _TCON	=	0x0088
                           000089   131 _TMOD	=	0x0089
                           00008A   132 _TL0	=	0x008a
                           00008B   133 _TL1	=	0x008b
                           00008C   134 _TH0	=	0x008c
                           00008D   135 _TH1	=	0x008d
                           000090   136 _P1	=	0x0090
                           000098   137 _SCON	=	0x0098
                           000099   138 _SBUF	=	0x0099
                           0000A0   139 _P2	=	0x00a0
                           0000A8   140 _IE	=	0x00a8
                           0000B0   141 _P3	=	0x00b0
                           0000B8   142 _IP	=	0x00b8
                           0000D0   143 _PSW	=	0x00d0
                           0000E0   144 _ACC	=	0x00e0
                           0000F0   145 _B	=	0x00f0
                                    146 ;--------------------------------------------------------
                                    147 ; special function bits
                                    148 ;--------------------------------------------------------
                                    149 	.area RSEG    (ABS,DATA)
      000000                        150 	.org 0x0000
                           000080   151 _P0_0	=	0x0080
                           000081   152 _P0_1	=	0x0081
                           000082   153 _P0_2	=	0x0082
                           000083   154 _P0_3	=	0x0083
                           000084   155 _P0_4	=	0x0084
                           000085   156 _P0_5	=	0x0085
                           000086   157 _P0_6	=	0x0086
                           000087   158 _P0_7	=	0x0087
                           000088   159 _IT0	=	0x0088
                           000089   160 _IE0	=	0x0089
                           00008A   161 _IT1	=	0x008a
                           00008B   162 _IE1	=	0x008b
                           00008C   163 _TR0	=	0x008c
                           00008D   164 _TF0	=	0x008d
                           00008E   165 _TR1	=	0x008e
                           00008F   166 _TF1	=	0x008f
                           000090   167 _P1_0	=	0x0090
                           000091   168 _P1_1	=	0x0091
                           000092   169 _P1_2	=	0x0092
                           000093   170 _P1_3	=	0x0093
                           000094   171 _P1_4	=	0x0094
                           000095   172 _P1_5	=	0x0095
                           000096   173 _P1_6	=	0x0096
                           000097   174 _P1_7	=	0x0097
                           000098   175 _RI	=	0x0098
                           000099   176 _TI	=	0x0099
                           00009A   177 _RB8	=	0x009a
                           00009B   178 _TB8	=	0x009b
                           00009C   179 _REN	=	0x009c
                           00009D   180 _SM2	=	0x009d
                           00009E   181 _SM1	=	0x009e
                           00009F   182 _SM0	=	0x009f
                           0000A0   183 _P2_0	=	0x00a0
                           0000A1   184 _P2_1	=	0x00a1
                           0000A2   185 _P2_2	=	0x00a2
                           0000A3   186 _P2_3	=	0x00a3
                           0000A4   187 _P2_4	=	0x00a4
                           0000A5   188 _P2_5	=	0x00a5
                           0000A6   189 _P2_6	=	0x00a6
                           0000A7   190 _P2_7	=	0x00a7
                           0000A8   191 _EX0	=	0x00a8
                           0000A9   192 _ET0	=	0x00a9
                           0000AA   193 _EX1	=	0x00aa
                           0000AB   194 _ET1	=	0x00ab
                           0000AC   195 _ES	=	0x00ac
                           0000AF   196 _EA	=	0x00af
                           0000B0   197 _P3_0	=	0x00b0
                           0000B1   198 _P3_1	=	0x00b1
                           0000B2   199 _P3_2	=	0x00b2
                           0000B3   200 _P3_3	=	0x00b3
                           0000B4   201 _P3_4	=	0x00b4
                           0000B5   202 _P3_5	=	0x00b5
                           0000B6   203 _P3_6	=	0x00b6
                           0000B7   204 _P3_7	=	0x00b7
                           0000B0   205 _RXD	=	0x00b0
                           0000B1   206 _TXD	=	0x00b1
                           0000B2   207 _INT0	=	0x00b2
                           0000B3   208 _INT1	=	0x00b3
                           0000B4   209 _T0	=	0x00b4
                           0000B5   210 _T1	=	0x00b5
                           0000B6   211 _WR	=	0x00b6
                           0000B7   212 _RD	=	0x00b7
                           0000B8   213 _PX0	=	0x00b8
                           0000B9   214 _PT0	=	0x00b9
                           0000BA   215 _PX1	=	0x00ba
                           0000BB   216 _PT1	=	0x00bb
                           0000BC   217 _PS	=	0x00bc
                           0000D0   218 _P	=	0x00d0
                           0000D1   219 _F1	=	0x00d1
                           0000D2   220 _OV	=	0x00d2
                           0000D3   221 _RS0	=	0x00d3
                           0000D4   222 _RS1	=	0x00d4
                           0000D5   223 _F0	=	0x00d5
                           0000D6   224 _AC	=	0x00d6
                           0000D7   225 _CY	=	0x00d7
                                    226 ;--------------------------------------------------------
                                    227 ; overlayable register banks
                                    228 ;--------------------------------------------------------
                                    229 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        230 	.ds 8
                                    231 ;--------------------------------------------------------
                                    232 ; internal ram data
                                    233 ;--------------------------------------------------------
                                    234 	.area DSEG    (DATA)
                                    235 ;--------------------------------------------------------
                                    236 ; overlayable items in internal ram 
                                    237 ;--------------------------------------------------------
                                    238 	.area	OSEG    (OVR,DATA)
                                    239 ;--------------------------------------------------------
                                    240 ; Stack segment in internal ram 
                                    241 ;--------------------------------------------------------
                                    242 	.area	SSEG
      000000                        243 __start__stack:
      000000                        244 	.ds	1
                                    245 
                                    246 ;--------------------------------------------------------
                                    247 ; indirectly addressable internal ram data
                                    248 ;--------------------------------------------------------
                                    249 	.area ISEG    (DATA)
                                    250 ;--------------------------------------------------------
                                    251 ; absolute internal ram data
                                    252 ;--------------------------------------------------------
                                    253 	.area IABS    (ABS,DATA)
                                    254 	.area IABS    (ABS,DATA)
                                    255 ;--------------------------------------------------------
                                    256 ; bit data
                                    257 ;--------------------------------------------------------
                                    258 	.area BSEG    (BIT)
                                    259 ;--------------------------------------------------------
                                    260 ; paged external ram data
                                    261 ;--------------------------------------------------------
                                    262 	.area PSEG    (PAG,XDATA)
                                    263 ;--------------------------------------------------------
                                    264 ; external ram data
                                    265 ;--------------------------------------------------------
                                    266 	.area XSEG    (XDATA)
                                    267 ;--------------------------------------------------------
                                    268 ; absolute external ram data
                                    269 ;--------------------------------------------------------
                                    270 	.area XABS    (ABS,XDATA)
                                    271 ;--------------------------------------------------------
                                    272 ; external initialized ram data
                                    273 ;--------------------------------------------------------
                                    274 	.area XISEG   (XDATA)
                                    275 	.area HOME    (CODE)
                                    276 	.area GSINIT0 (CODE)
                                    277 	.area GSINIT1 (CODE)
                                    278 	.area GSINIT2 (CODE)
                                    279 	.area GSINIT3 (CODE)
                                    280 	.area GSINIT4 (CODE)
                                    281 	.area GSINIT5 (CODE)
                                    282 	.area GSINIT  (CODE)
                                    283 	.area GSFINAL (CODE)
                                    284 	.area CSEG    (CODE)
                                    285 ;--------------------------------------------------------
                                    286 ; interrupt vector 
                                    287 ;--------------------------------------------------------
                                    288 	.area HOME    (CODE)
      000000                        289 __interrupt_vect:
      000000 02r00r00         [24]  290 	ljmp	__sdcc_gsinit_startup
                                    291 ;--------------------------------------------------------
                                    292 ; global & static initialisations
                                    293 ;--------------------------------------------------------
                                    294 	.area HOME    (CODE)
                                    295 	.area GSINIT  (CODE)
                                    296 	.area GSFINAL (CODE)
                                    297 	.area GSINIT  (CODE)
                                    298 	.globl __sdcc_gsinit_startup
                                    299 	.globl __sdcc_program_startup
                                    300 	.globl __start__stack
                                    301 	.globl __mcs51_genXINIT
                                    302 	.globl __mcs51_genXRAMCLEAR
                                    303 	.globl __mcs51_genRAMCLEAR
                                    304 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  305 	ljmp	__sdcc_program_startup
                                    306 ;--------------------------------------------------------
                                    307 ; Home
                                    308 ;--------------------------------------------------------
                                    309 	.area HOME    (CODE)
                                    310 	.area HOME    (CODE)
      000003                        311 __sdcc_program_startup:
      000003 02r01r6D         [24]  312 	ljmp	_main
                                    313 ;	return from main will return to caller
                                    314 ;--------------------------------------------------------
                                    315 ; code
                                    316 ;--------------------------------------------------------
                                    317 	.area CSEG    (CODE)
                                    318 ;------------------------------------------------------------
                                    319 ;Allocation info for local variables in function 'InitTimer'
                                    320 ;------------------------------------------------------------
                                    321 ;	iic.h:4: void InitTimer(){
                                    322 ;	-----------------------------------------
                                    323 ;	 function InitTimer
                                    324 ;	-----------------------------------------
      000000                        325 _InitTimer:
                           000007   326 	ar7 = 0x07
                           000006   327 	ar6 = 0x06
                           000005   328 	ar5 = 0x05
                           000004   329 	ar4 = 0x04
                           000003   330 	ar3 = 0x03
                           000002   331 	ar2 = 0x02
                           000001   332 	ar1 = 0x01
                           000000   333 	ar0 = 0x00
                                    334 ;	iic.h:5: TMOD=0x01;
      000000 75 89 01         [24]  335 	mov	_TMOD,#0x01
                                    336 ;	iic.h:6: T0=0x00;
                                    337 ;	assignBit
      000003 C2 B4            [12]  338 	clr	_T0
                                    339 ;	iic.h:7: TF0=0;
                                    340 ;	assignBit
      000005 C2 8D            [12]  341 	clr	_TF0
                                    342 ;	iic.h:8: TR0=0;
                                    343 ;	assignBit
      000007 C2 8C            [12]  344 	clr	_TR0
                                    345 ;	iic.h:9: }
      000009 22               [24]  346 	ret
                                    347 ;------------------------------------------------------------
                                    348 ;Allocation info for local variables in function 'Delay'
                                    349 ;------------------------------------------------------------
                                    350 ;i                         Allocated to registers r6 r7 
                                    351 ;------------------------------------------------------------
                                    352 ;	iic.h:11: void Delay(unsigned int i){
                                    353 ;	-----------------------------------------
                                    354 ;	 function Delay
                                    355 ;	-----------------------------------------
      00000A                        356 _Delay:
      00000A AE 82            [24]  357 	mov	r6,dpl
      00000C AF 83            [24]  358 	mov	r7,dph
                                    359 ;	iic.h:12: T0=0xffff-i;
      00000E 74 FF            [12]  360 	mov	a,#0xff
      000010 C3               [12]  361 	clr	c
      000011 9E               [12]  362 	subb	a,r6
      000012 FE               [12]  363 	mov	r6,a
      000013 74 FF            [12]  364 	mov	a,#0xff
      000015 9F               [12]  365 	subb	a,r7
                                    366 ;	assignBit
      000016 4E               [12]  367 	orl	a,r6
      000017 24 FF            [12]  368 	add	a,#0xff
      000019 92 B4            [24]  369 	mov	_T0,c
                                    370 ;	iic.h:13: TR0=1;
                                    371 ;	assignBit
      00001B D2 8C            [12]  372 	setb	_TR0
                                    373 ;	iic.h:14: while(TF0!=1);
      00001D                        374 00101$:
      00001D 30 8D FD         [24]  375 	jnb	_TF0,00101$
                                    376 ;	iic.h:15: TR0=0;
                                    377 ;	assignBit
      000020 C2 8C            [12]  378 	clr	_TR0
                                    379 ;	iic.h:16: TF0=0;
                                    380 ;	assignBit
      000022 C2 8D            [12]  381 	clr	_TF0
                                    382 ;	iic.h:17: }
      000024 22               [24]  383 	ret
                                    384 ;------------------------------------------------------------
                                    385 ;Allocation info for local variables in function 'IIC_Delay'
                                    386 ;------------------------------------------------------------
                                    387 ;	iic.h:19: void IIC_Delay(){
                                    388 ;	-----------------------------------------
                                    389 ;	 function IIC_Delay
                                    390 ;	-----------------------------------------
      000025                        391 _IIC_Delay:
                                    392 ;	iic.h:20: Delay(5);
      000025 90 00 05         [24]  393 	mov	dptr,#0x0005
                                    394 ;	iic.h:21: }
      000028 02r00r0A         [24]  395 	ljmp	_Delay
                                    396 ;------------------------------------------------------------
                                    397 ;Allocation info for local variables in function 'IIC_Start'
                                    398 ;------------------------------------------------------------
                                    399 ;	iic.h:23: void IIC_Start(){
                                    400 ;	-----------------------------------------
                                    401 ;	 function IIC_Start
                                    402 ;	-----------------------------------------
      00002B                        403 _IIC_Start:
                                    404 ;	iic.h:24: SCL=1;
                                    405 ;	assignBit
      00002B D2 80            [12]  406 	setb	_P0_0
                                    407 ;	iic.h:25: SDA=1;
                                    408 ;	assignBit
      00002D D2 81            [12]  409 	setb	_P0_1
                                    410 ;	iic.h:26: IIC_Delay();
      00002F 12r00r25         [24]  411 	lcall	_IIC_Delay
                                    412 ;	iic.h:27: SDA=0;
                                    413 ;	assignBit
      000032 C2 81            [12]  414 	clr	_P0_1
                                    415 ;	iic.h:28: IIC_Delay();
      000034 12r00r25         [24]  416 	lcall	_IIC_Delay
                                    417 ;	iic.h:29: SCL=0;
                                    418 ;	assignBit
      000037 C2 80            [12]  419 	clr	_P0_0
                                    420 ;	iic.h:30: }
      000039 22               [24]  421 	ret
                                    422 ;------------------------------------------------------------
                                    423 ;Allocation info for local variables in function 'IIC_Stop'
                                    424 ;------------------------------------------------------------
                                    425 ;	iic.h:32: void IIC_Stop(){
                                    426 ;	-----------------------------------------
                                    427 ;	 function IIC_Stop
                                    428 ;	-----------------------------------------
      00003A                        429 _IIC_Stop:
                                    430 ;	iic.h:33: SCL=0;
                                    431 ;	assignBit
      00003A C2 80            [12]  432 	clr	_P0_0
                                    433 ;	iic.h:34: SDA=0;
                                    434 ;	assignBit
      00003C C2 81            [12]  435 	clr	_P0_1
                                    436 ;	iic.h:35: IIC_Delay();
      00003E 12r00r25         [24]  437 	lcall	_IIC_Delay
                                    438 ;	iic.h:36: SDA=1;
                                    439 ;	assignBit
      000041 D2 81            [12]  440 	setb	_P0_1
                                    441 ;	iic.h:37: IIC_Delay();
                                    442 ;	iic.h:38: }
      000043 02r00r25         [24]  443 	ljmp	_IIC_Delay
                                    444 ;------------------------------------------------------------
                                    445 ;Allocation info for local variables in function 'IIC_SendAck'
                                    446 ;------------------------------------------------------------
                                    447 ;	iic.h:40: void IIC_SendAck(){
                                    448 ;	-----------------------------------------
                                    449 ;	 function IIC_SendAck
                                    450 ;	-----------------------------------------
      000046                        451 _IIC_SendAck:
                                    452 ;	iic.h:41: SDA=0;
                                    453 ;	assignBit
      000046 C2 81            [12]  454 	clr	_P0_1
                                    455 ;	iic.h:42: SCL=1;
                                    456 ;	assignBit
      000048 D2 80            [12]  457 	setb	_P0_0
                                    458 ;	iic.h:43: IIC_Delay();
      00004A 12r00r25         [24]  459 	lcall	_IIC_Delay
                                    460 ;	iic.h:44: SCL=0;
                                    461 ;	assignBit
      00004D C2 80            [12]  462 	clr	_P0_0
                                    463 ;	iic.h:45: }
      00004F 22               [24]  464 	ret
                                    465 ;------------------------------------------------------------
                                    466 ;Allocation info for local variables in function 'IIC_SendNack'
                                    467 ;------------------------------------------------------------
                                    468 ;	iic.h:47: void IIC_SendNack(){
                                    469 ;	-----------------------------------------
                                    470 ;	 function IIC_SendNack
                                    471 ;	-----------------------------------------
      000050                        472 _IIC_SendNack:
                                    473 ;	iic.h:48: SDA=1;
                                    474 ;	assignBit
      000050 D2 81            [12]  475 	setb	_P0_1
                                    476 ;	iic.h:49: SCL=1;
                                    477 ;	assignBit
      000052 D2 80            [12]  478 	setb	_P0_0
                                    479 ;	iic.h:50: IIC_Delay();
      000054 12r00r25         [24]  480 	lcall	_IIC_Delay
                                    481 ;	iic.h:51: SCL=0;
                                    482 ;	assignBit
      000057 C2 80            [12]  483 	clr	_P0_0
                                    484 ;	iic.h:52: }
      000059 22               [24]  485 	ret
                                    486 ;------------------------------------------------------------
                                    487 ;Allocation info for local variables in function 'IIC_WaitAck'
                                    488 ;------------------------------------------------------------
                                    489 ;tmp                       Allocated to registers r6 r7 
                                    490 ;------------------------------------------------------------
                                    491 ;	iic.h:55: unsigned int IIC_WaitAck(){
                                    492 ;	-----------------------------------------
                                    493 ;	 function IIC_WaitAck
                                    494 ;	-----------------------------------------
      00005A                        495 _IIC_WaitAck:
                                    496 ;	iic.h:57: SCL=1;
                                    497 ;	assignBit
      00005A D2 80            [12]  498 	setb	_P0_0
                                    499 ;	iic.h:58: SDA=1;
                                    500 ;	assignBit
      00005C D2 81            [12]  501 	setb	_P0_1
                                    502 ;	iic.h:59: while(SDA==1 && tmp<=255)tmp++;
      00005E 7E 00            [12]  503 	mov	r6,#0x00
      000060 7F 00            [12]  504 	mov	r7,#0x00
      000062                        505 00102$:
      000062 30 81 0F         [24]  506 	jnb	_P0_1,00104$
      000065 C3               [12]  507 	clr	c
      000066 74 FF            [12]  508 	mov	a,#0xff
      000068 9E               [12]  509 	subb	a,r6
      000069 E4               [12]  510 	clr	a
      00006A 9F               [12]  511 	subb	a,r7
      00006B 40 07            [24]  512 	jc	00104$
      00006D 0E               [12]  513 	inc	r6
      00006E BE 00 F1         [24]  514 	cjne	r6,#0x00,00102$
      000071 0F               [12]  515 	inc	r7
      000072 80 EE            [24]  516 	sjmp	00102$
      000074                        517 00104$:
                                    518 ;	iic.h:60: if(SDA==1){
      000074 30 81 07         [24]  519 	jnb	_P0_1,00106$
                                    520 ;	iic.h:61: IIC_Stop();
      000077 12r00r3A         [24]  521 	lcall	_IIC_Stop
                                    522 ;	iic.h:62: return 0;
      00007A 90 00 00         [24]  523 	mov	dptr,#0x0000
      00007D 22               [24]  524 	ret
      00007E                        525 00106$:
                                    526 ;	iic.h:64: SCL=0;
                                    527 ;	assignBit
      00007E C2 80            [12]  528 	clr	_P0_0
                                    529 ;	iic.h:65: return 1;
      000080 90 00 01         [24]  530 	mov	dptr,#0x0001
                                    531 ;	iic.h:66: }
      000083 22               [24]  532 	ret
                                    533 ;------------------------------------------------------------
                                    534 ;Allocation info for local variables in function 'IIC_Write'
                                    535 ;------------------------------------------------------------
                                    536 ;data                      Allocated to registers r6 r7 
                                    537 ;i                         Allocated to registers r4 r5 
                                    538 ;------------------------------------------------------------
                                    539 ;	iic.h:68: unsigned int IIC_Write(unsigned int data){
                                    540 ;	-----------------------------------------
                                    541 ;	 function IIC_Write
                                    542 ;	-----------------------------------------
      000084                        543 _IIC_Write:
      000084 AE 82            [24]  544 	mov	r6,dpl
                                    545 ;	iic.h:70: for(i=0;i<8;i++){
      000086 53 06 80         [24]  546 	anl	ar6,#0x80
      000089 7F 00            [12]  547 	mov	r7,#0x00
      00008B 7C 00            [12]  548 	mov	r4,#0x00
      00008D 7D 00            [12]  549 	mov	r5,#0x00
      00008F                        550 00105$:
                                    551 ;	iic.h:71: if((data&0x80)==0)
      00008F EE               [12]  552 	mov	a,r6
      000090 4F               [12]  553 	orl	a,r7
      000091 70 04            [24]  554 	jnz	00102$
                                    555 ;	iic.h:72: SDA=0;
                                    556 ;	assignBit
      000093 C2 81            [12]  557 	clr	_P0_1
      000095 80 02            [24]  558 	sjmp	00103$
      000097                        559 00102$:
                                    560 ;	iic.h:74: SDA=1;
                                    561 ;	assignBit
      000097 D2 81            [12]  562 	setb	_P0_1
      000099                        563 00103$:
                                    564 ;	iic.h:75: SCL=0;
                                    565 ;	assignBit
      000099 C2 80            [12]  566 	clr	_P0_0
                                    567 ;	iic.h:76: IIC_Delay();
      00009B C0 07            [24]  568 	push	ar7
      00009D C0 06            [24]  569 	push	ar6
      00009F C0 05            [24]  570 	push	ar5
      0000A1 C0 04            [24]  571 	push	ar4
      0000A3 12r00r25         [24]  572 	lcall	_IIC_Delay
      0000A6 D0 04            [24]  573 	pop	ar4
      0000A8 D0 05            [24]  574 	pop	ar5
      0000AA D0 06            [24]  575 	pop	ar6
      0000AC D0 07            [24]  576 	pop	ar7
                                    577 ;	iic.h:77: SCL=1;
                                    578 ;	assignBit
      0000AE D2 80            [12]  579 	setb	_P0_0
                                    580 ;	iic.h:78: SDA<<=1;
      0000B0 A2 81            [12]  581 	mov	c,_P0_1
      0000B2 E4               [12]  582 	clr	a
      0000B3 33               [12]  583 	rlc	a
      0000B4 25 E0            [12]  584 	add	a,acc
      0000B6 24 FF            [12]  585 	add	a,#0xff
      0000B8 92 81            [24]  586 	mov	_P0_1,c
                                    587 ;	iic.h:70: for(i=0;i<8;i++){
      0000BA 0C               [12]  588 	inc	r4
      0000BB BC 00 01         [24]  589 	cjne	r4,#0x00,00123$
      0000BE 0D               [12]  590 	inc	r5
      0000BF                        591 00123$:
      0000BF C3               [12]  592 	clr	c
      0000C0 EC               [12]  593 	mov	a,r4
      0000C1 94 08            [12]  594 	subb	a,#0x08
      0000C3 ED               [12]  595 	mov	a,r5
      0000C4 64 80            [12]  596 	xrl	a,#0x80
      0000C6 94 80            [12]  597 	subb	a,#0x80
      0000C8 40 C5            [24]  598 	jc	00105$
                                    599 ;	iic.h:80: return IIC_WaitAck();
                                    600 ;	iic.h:81: }
      0000CA 02r00r5A         [24]  601 	ljmp	_IIC_WaitAck
                                    602 ;------------------------------------------------------------
                                    603 ;Allocation info for local variables in function 'IIC_Read'
                                    604 ;------------------------------------------------------------
                                    605 ;i                         Allocated to registers r4 r5 
                                    606 ;data                      Allocated to registers r2 r3 
                                    607 ;------------------------------------------------------------
                                    608 ;	iic.h:82: unsigned int IIC_Read(){
                                    609 ;	-----------------------------------------
                                    610 ;	 function IIC_Read
                                    611 ;	-----------------------------------------
      0000CD                        612 _IIC_Read:
                                    613 ;	iic.h:83: int i=0,data=0;
      0000CD 7E 00            [12]  614 	mov	r6,#0x00
      0000CF 7F 00            [12]  615 	mov	r7,#0x00
                                    616 ;	iic.h:84: for(i=0;i<8;i++){
      0000D1 7C 00            [12]  617 	mov	r4,#0x00
      0000D3 7D 00            [12]  618 	mov	r5,#0x00
      0000D5                        619 00102$:
                                    620 ;	iic.h:85: IIC_Delay();
      0000D5 C0 07            [24]  621 	push	ar7
      0000D7 C0 06            [24]  622 	push	ar6
      0000D9 C0 05            [24]  623 	push	ar5
      0000DB C0 04            [24]  624 	push	ar4
      0000DD 12r00r25         [24]  625 	lcall	_IIC_Delay
      0000E0 D0 04            [24]  626 	pop	ar4
      0000E2 D0 05            [24]  627 	pop	ar5
      0000E4 D0 06            [24]  628 	pop	ar6
      0000E6 D0 07            [24]  629 	pop	ar7
                                    630 ;	iic.h:86: SCL=1;
                                    631 ;	assignBit
      0000E8 D2 80            [12]  632 	setb	_P0_0
                                    633 ;	iic.h:87: data|=SDA;
      0000EA A2 81            [12]  634 	mov	c,_P0_1
      0000EC E4               [12]  635 	clr	a
      0000ED 33               [12]  636 	rlc	a
      0000EE FA               [12]  637 	mov	r2,a
      0000EF 7B 00            [12]  638 	mov	r3,#0x00
      0000F1 EE               [12]  639 	mov	a,r6
      0000F2 42 02            [12]  640 	orl	ar2,a
      0000F4 EF               [12]  641 	mov	a,r7
      0000F5 42 03            [12]  642 	orl	ar3,a
                                    643 ;	iic.h:88: data<<=1;		
      0000F7 EA               [12]  644 	mov	a,r2
      0000F8 2A               [12]  645 	add	a,r2
      0000F9 FE               [12]  646 	mov	r6,a
      0000FA EB               [12]  647 	mov	a,r3
      0000FB 33               [12]  648 	rlc	a
      0000FC FF               [12]  649 	mov	r7,a
                                    650 ;	iic.h:89: SCL=0; 
                                    651 ;	assignBit
      0000FD C2 80            [12]  652 	clr	_P0_0
                                    653 ;	iic.h:84: for(i=0;i<8;i++){
      0000FF 0C               [12]  654 	inc	r4
      000100 BC 00 01         [24]  655 	cjne	r4,#0x00,00117$
      000103 0D               [12]  656 	inc	r5
      000104                        657 00117$:
      000104 C3               [12]  658 	clr	c
      000105 EC               [12]  659 	mov	a,r4
      000106 94 08            [12]  660 	subb	a,#0x08
      000108 ED               [12]  661 	mov	a,r5
      000109 64 80            [12]  662 	xrl	a,#0x80
      00010B 94 80            [12]  663 	subb	a,#0x80
      00010D 40 C6            [24]  664 	jc	00102$
                                    665 ;	iic.h:91: IIC_SendAck();
      00010F C0 07            [24]  666 	push	ar7
      000111 C0 06            [24]  667 	push	ar6
      000113 12r00r46         [24]  668 	lcall	_IIC_SendAck
      000116 D0 06            [24]  669 	pop	ar6
      000118 D0 07            [24]  670 	pop	ar7
                                    671 ;	iic.h:92: return data;
      00011A 8E 82            [24]  672 	mov	dpl,r6
      00011C 8F 83            [24]  673 	mov	dph,r7
                                    674 ;	iic.h:93: }
      00011E 22               [24]  675 	ret
                                    676 ;------------------------------------------------------------
                                    677 ;Allocation info for local variables in function 'EEPROM_Write'
                                    678 ;------------------------------------------------------------
                                    679 ;data                      Allocated to registers r6 r7 
                                    680 ;------------------------------------------------------------
                                    681 ;	main.c:4: void EEPROM_Write(unsigned int data){
                                    682 ;	-----------------------------------------
                                    683 ;	 function EEPROM_Write
                                    684 ;	-----------------------------------------
      00011F                        685 _EEPROM_Write:
      00011F AE 82            [24]  686 	mov	r6,dpl
      000121 AF 83            [24]  687 	mov	r7,dph
                                    688 ;	main.c:5: IIC_Start();
      000123 C0 07            [24]  689 	push	ar7
      000125 C0 06            [24]  690 	push	ar6
      000127 12r00r2B         [24]  691 	lcall	_IIC_Start
                                    692 ;	main.c:6: IIC_Write(0xA0);
      00012A 90 00 A0         [24]  693 	mov	dptr,#0x00a0
      00012D 12r00r84         [24]  694 	lcall	_IIC_Write
                                    695 ;	main.c:7: IIC_Write(0x00);
      000130 90 00 00         [24]  696 	mov	dptr,#0x0000
      000133 12r00r84         [24]  697 	lcall	_IIC_Write
      000136 D0 06            [24]  698 	pop	ar6
      000138 D0 07            [24]  699 	pop	ar7
                                    700 ;	main.c:8: IIC_Write(data);
      00013A 8E 82            [24]  701 	mov	dpl,r6
      00013C 8F 83            [24]  702 	mov	dph,r7
      00013E 12r00r84         [24]  703 	lcall	_IIC_Write
                                    704 ;	main.c:9: IIC_Stop();
                                    705 ;	main.c:10: }
      000141 02r00r3A         [24]  706 	ljmp	_IIC_Stop
                                    707 ;------------------------------------------------------------
                                    708 ;Allocation info for local variables in function 'EEPROM_Read'
                                    709 ;------------------------------------------------------------
                                    710 ;data                      Allocated to registers r6 r7 
                                    711 ;------------------------------------------------------------
                                    712 ;	main.c:12: unsigned int EEPROM_Read(){
                                    713 ;	-----------------------------------------
                                    714 ;	 function EEPROM_Read
                                    715 ;	-----------------------------------------
      000144                        716 _EEPROM_Read:
                                    717 ;	main.c:14: IIC_Start();
      000144 12r00r2B         [24]  718 	lcall	_IIC_Start
                                    719 ;	main.c:15: IIC_Write(0xA1);
      000147 90 00 A1         [24]  720 	mov	dptr,#0x00a1
      00014A 12r00r84         [24]  721 	lcall	_IIC_Write
                                    722 ;	main.c:16: IIC_Write(0x00);
      00014D 90 00 00         [24]  723 	mov	dptr,#0x0000
      000150 12r00r84         [24]  724 	lcall	_IIC_Write
                                    725 ;	main.c:17: IIC_Start();
      000153 12r00r2B         [24]  726 	lcall	_IIC_Start
                                    727 ;	main.c:18: data=IIC_Read();
      000156 12r00rCD         [24]  728 	lcall	_IIC_Read
      000159 AE 82            [24]  729 	mov	r6,dpl
      00015B AF 83            [24]  730 	mov	r7,dph
                                    731 ;	main.c:19: IIC_Stop();
      00015D C0 07            [24]  732 	push	ar7
      00015F C0 06            [24]  733 	push	ar6
      000161 12r00r3A         [24]  734 	lcall	_IIC_Stop
      000164 D0 06            [24]  735 	pop	ar6
      000166 D0 07            [24]  736 	pop	ar7
                                    737 ;	main.c:20: return data;
      000168 8E 82            [24]  738 	mov	dpl,r6
      00016A 8F 83            [24]  739 	mov	dph,r7
                                    740 ;	main.c:21: }
      00016C 22               [24]  741 	ret
                                    742 ;------------------------------------------------------------
                                    743 ;Allocation info for local variables in function 'main'
                                    744 ;------------------------------------------------------------
                                    745 ;data                      Allocated to registers r6 r7 
                                    746 ;------------------------------------------------------------
                                    747 ;	main.c:23: void main(){
                                    748 ;	-----------------------------------------
                                    749 ;	 function main
                                    750 ;	-----------------------------------------
      00016D                        751 _main:
                                    752 ;	main.c:25: InitTimer();
      00016D 12r00r00         [24]  753 	lcall	_InitTimer
                                    754 ;	main.c:26: EEPROM_Write(0xAA);
      000170 90 00 AA         [24]  755 	mov	dptr,#0x00aa
      000173 12r01r1F         [24]  756 	lcall	_EEPROM_Write
                                    757 ;	main.c:27: IIC_Delay();
      000176 12r00r25         [24]  758 	lcall	_IIC_Delay
                                    759 ;	main.c:28: data = EEPROM_Read();
      000179 12r01r44         [24]  760 	lcall	_EEPROM_Read
      00017C AE 82            [24]  761 	mov	r6,dpl
                                    762 ;	main.c:29: LED = data;
      00017E 8E 90            [24]  763 	mov	_P1,r6
                                    764 ;	main.c:30: while(1);
      000180                        765 00102$:
                                    766 ;	main.c:31: }
      000180 80 FE            [24]  767 	sjmp	00102$
                                    768 	.area CSEG    (CODE)
                                    769 	.area CONST   (CODE)
                                    770 	.area XINIT   (CODE)
                                    771 	.area CABS    (ABS,CODE)
